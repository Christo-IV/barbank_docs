openapi: 3.0.2
info:
  title: Barbank_2
  version: 1.0.0
  description: |
    Bank of bars: the force awakens
servers:
  - url: https://barbank.diarainfra.com
paths:
  /users:
    summary: Path used to manage the list of users.
    description: >-
      The REST endpoint/path used to list and create zero or more `user` entities.  This path contains a
      `GET` and `POST` operation to perform the list and create tasks, respectively.
    post:
      requestBody:
        description: A new `user` to be created.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
        required: true
      tags:
        - Users
      responses:
        '200':
          description: User created successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                Paramater missing:
                  value:
                    error: 'User validation failed: .*: Path `.*` is required.'
          description: Parameter missing
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                Username already exists:
                  value:
                    error: Username already exists
          description: Username already exists
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                Incorrect paramater length:
                  value: |-
                    {
                        "error": "Path `(?<parameterName>.+)` \(`(?<sampleValue>.+)`\) is (longer|shorter) than the (maximum|minimum) allowed length \((?<requiredLength>\d+)\)"
                    }
          description: Incorrect paramater length
      operationId: createuser
      summary: Create a user
      description: Creates a new instance of a `user`.
  /sessions:
    summary: Path used to manage the list of sessions.
    description: >-
      The REST endpoint/path used to list and create zero or more `session` entities.  This path
      contains a `GET` and `POST` operation to perform the list and create tasks, respectively.
    post:
      requestBody:
        description: A new `session` to be created.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/session'
        required: true
      tags:
        - Sessions
      responses:
        '201':
          description: Successful response.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                Missing parameters:
                  value:
                    error: Missing parameters
          description: Missing parameters
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                Invalid credentials:
                  value:
                    error: Invalid credentials
          description: Invalid credentials
      operationId: createsession
      summary: Create a session
      description: Creates a new instance of a `session`.
    delete:
      tags:
        - Sessions
      responses:
        '204':
          description: Session deleted successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                No authorization header:
                  value:
                    error: No authorization header
                Invalid authorization format:
                  value:
                    error: Invalid authorization format
                Authorization header does not match MongoDB format:
                  value:
                    error: Authorization header does not match MongoDB format
          description: Request related issues
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                Invalid token:
                  value:
                    error: Invalid token
          description: Invalid token
      security:
        -
          Bearer: []
      summary: Delete a session
      description: Deletes given instance of `session`
  /users/current:
    get:
      tags:
        - Users
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/accounts'
              examples:
                Accounts:
                  value:
                    -
                      __v: 93
                      _id: some text
                      balance: 65
                      currency: some text
                      name: some text
                      number: some text
                      userId: some text
                    -
                      __v: 23
                      _id: some text
                      balance: 80
                      currency: some text
                      name: some text
                      number: some text
                      userId: some text
          description: Accounts successfully retrieved
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                No authorization header:
                  value:
                    error: No authorization header
                Invalid authorization format:
                  value:
                    error: Invalid authorization format
                Authorization header does not match MongoDB format:
                  value:
                    error: Authorization header does not match MongoDB format
          description: Token related issues
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                Invalid credentials:
                  value:
                    error: Invalid credentials
          description: Incorrect authorization token
      security:
        -
          Bearer: []
      summary: Returns user data
      description: Returns data related to the user's bank accounts
  /transactions:
    summary: Path used to manage the list of transactions.
    description: >-
      The REST endpoint/path used to list and create zero or more `Transaction` entities.  This path
      contains a `GET` and `POST` operation to perform the list and create tasks, respectively.
    get:
      tags:
        - Transactions
      responses:
        '200':
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                Missing parameter:
                  value:
                    error: Missing parameter
          description: Bad request
    post:
      requestBody:
        description: A new `Transaction` to be created.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/transaction'
        required: true
      tags:
        - Transactions
      responses:
        '201':
          description: Successful response.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                Invalid amount:
                  value:
                    error: Invalid amount
          description: Invalid amount of money
        '402':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                Insufficient funds:
                  value:
                    error: Insufficient funds
          description: Not enough funds to complete transaction
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                Unauthorized access to account:
                  value:
                    error: Unauthorized access to account
          description: Transaction was made from and unauthorized account
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                Destination bank not found:
                  value: |-
                    {
                       {"error": "Destination bank not found"}
                    }
                accountFrom does not exist:
                  value:
                    error: accountFrom does not exist
          description: Bank accounts not found
      security:
        -
          Bearer: []
      operationId: createTransaction
      summary: Create a Transaction
      description: Creates a new instance of a `Transaction`.
  /transactions/b2b:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/transaction'
        required: true
      tags:
        - Transactions
      responses:
        '200':
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                Missing parameters:
                  value:
                    error: Missing parameter
                Parameter is not string:
                  value:
                    error: Parameter is not string
                Unknown sending bank:
                  value:
                    error: Unknown sending bank
                Signature verification failed:
                  value:
                    error: Signature verification failed
          description: Bad request
  /transactions/jwks:
    get:
      tags:
        - Transactions
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JWKS'
              examples:
                Public key:
                  value:
                    keys:
                      -
                        kty: some text
                        kid: some text
                        'n': some text
                        e: some text
          description: Returns bank's public key as a JWKS
      summary: Returns bank's public key
      description: >-
        Returns (source) bank's public key which is then used to validate it's signature, when another
        bank receives it's transaction request.
components:
  schemas:
    user:
      title: Root Type for user
      description: ''
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        name:
          type: string
      example:
        username: davey
        password: blimp_strats
        name: Dave Davey
    error:
      title: Root Type for error
      description: ''
      type: object
      properties:
        error:
          type: string
      example:
        error: Some text
    session:
      title: Root Type for session
      description: ''
      type: object
      properties:
        token:
          type: string
      example:
        username: fabinator
        password: qwertyqwerty
    accounts:
      title: Root Type for accounts
      description: ''
      type: array
      items:
        type: object
        properties:
          __v:
            format: int32
            type: integer
          _id:
            type: string
          balance:
            format: int32
            type: integer
          currency:
            type: string
          name:
            type: string
          number:
            type: string
          userId:
            type: string
      example:
        -
          __v: 0
          _id: 6163ecaa98184178b9ec8db2
          balance: 10000
          currency: EUR
          name: Main
          number: lo8wufkiu88
          userId: 6163ecaa98184178b9ec8db0
    transaction:
      title: Root Type for Transaction
      description: ''
      type: object
      properties:
        accountFrom:
          type: string
        accountTo:
          type: string
        amount:
          format: int32
          type: integer
        currency:
          type: string
        explanation:
          type: string
      example:
        accountFrom: lo8wufkiu88
        accountTo: POG455463523
        amount: 2
        currency: EURDLR
        explanation: asdasdsdsadsda1
    JWKS:
      title: Root Type for JWKS
      description: JSON Web Keys
      type: object
      properties:
        keys:
          type: array
          items:
            type: object
            properties:
              kty:
                type: string
              kid:
                type: string
              'n':
                type: string
              e:
                type: string
      example:
        keys:
          -
            kty: RSA
            kid: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            'n': >-
              AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
            e: AAAA
  securitySchemes:
    Bearer:
      scheme: bearer
      type: http
tags:
  -
    name: Users
    description: ''
  -
    name: Sessions
    description: ''
